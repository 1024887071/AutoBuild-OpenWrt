#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_LienolOP_x86

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 释放磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true  

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        df -hT $PWD

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/Lienol/openwrt
        REPO_BRANCH: main
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git passwallyl https://github.com/xiaorouji/openwrt-passwall-packages" >> ./feeds.conf.default
        echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> ./feeds.conf.default
        echo "src-git istore https://github.com/linkease/istore;main" >> ./feeds.conf.default
        echo "src-git nas https://github.com/linkease/nas-packages.git;master" >> ./feeds.conf.default
        echo "src-git nas_luci https://github.com/linkease/nas-packages-luci.git;main" >> ./feeds.conf.default
         
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        df -hT $PWD

    #- name: Import external feeds - passwall
      #working-directory: ./openwrt
      #run: |
        #git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
        #git clone "your_github_link" package/"your_folder_name"      

    - name: Import external feeds - JerryKuKu Argon
      working-directory: ./openwrt
      run: |
        git clone https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
        git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config

    - name: Configuration Customization - Build_LienolOP_x86
      env:
        CONFIG_FILE: 'config/lienol/X86.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize3.sh && ./customize3.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: LienolOP_X86
        path: openwrt/bin
